opt				OPT
alignas			ALIGNAS
alignof			ALIGNOF
asm				ASM
auto			AUTO
bool			BOOL
break			BREAK
case			CASE
catch			CATCH
char			CHAR
char16_t			CHAR16_T
char32_t			CHAR32_T
class			CLASS
const			CONST
constexpr			CONSTEXPR
const_cast			CONST_CAST
continue			CONTINUE
decltype			DECLTYPE
default			DEFAULT
delete			DELETE
do				DO
double			DOUBLE
dynamic_cast			DYNAMIC_CAST
else			ELSE
enum			ENUM
explicit			EXPLICIT
export			EXPORT
extern			EXTERN
false			FALSE
float			FLOAT
for				FOR
friend			FRIEND
final			FINAL
goto			GOTO
if				IF
inline			INLINE
int				INT
long			LONG
mutable			MUTABLE
namespace			NAMESPACE
new					NEW
noexcept			NOEXCEPT
nullptr				NULLPTR
operator			OPERATOR
override			OVERRIDE
private				PRIVATE
protected			PROTECTED
public				PUBLIC
register			REGISTER
reinterpret_cast			REINTERPRET_CAST
return			RETURN
short			SHORT
signed			SIGNED
sizeof			SIZEOF
static			STATIC
static_assert			STATIC_ASSERT
static_cast				STATIC_CAST
struct					STRUCT
switch					SWITCH
template				TEMPLATE
this					THIS
thread_local			THREAD_LOCAL
throw				THROW
true				TRUE
try					TRY
typedef				TYPEDEF
typeid				TYPEID
typename			TYPENAME
union				UNION
unsigned			UNSIGNED
using				USING
virtual				VIRTUAL
void				VOID
volatile			VOLATILE
wchar_t				WCHAR_T
while				WHILE
{		L_BRACE
}		R_BRACE
[		L_BRACKET
]		R_BRACKET
#		HASH
##		D_HASH
(		L_PARENTHESIS
)		R_PARENTHESIS
;		SEMICOLON
:		COLON
...		ELLIPSIS
?		QUESTION
::		D_COLON
.		DOT
.*		DOT_ASTERISK
+		ADD
-		MINUS
*		ASTERISK
/		DIV
%		MOD
&		AND
|		OR
^		XOR
~		INVERT
!		NOT
=		ASSIGN
<		LESS
>		GREATER
+=		C_ADD
-=		C_MINUS
*=		C_MUL
/=		C_DIV
%=		C_MOD
&=		C_AND
|=		C_OR
^=		C_XOR
<<		LSHIFT
>>		RSHIFT
>>=		C_RSHIFT
<<=		C_LSHIFT
==		EQUAL
!=		NOT_EQUAL
<=		LESS_EQUAL
>=		GREATER_EQUAL
&&		LAND
||		LOR
++		INC
--		DEC
,		COMMA
->		ARROW
->*		ARROW_ASTERISK
new[] 	NEW_ARRAY
delete[] 	DELELTE_ARRAY
literal		LITERAL
ID		ID
STR		STR
zero 	0	
TMP		temp	
