opt			"opt"
alignas		"alignas"
alignof		"alignof"
asm			"asm"
auto		"auto"
bool		"bool"
break		"break"
case		"case"
catch		"catch"
char		"char"
char16_t		"char16_t"
char32_t		"char32_t"
class		"class"
const		"const"
constexpr		"constexpr"
const_cast		"const_cast"
continue		"continue"
decltype		"decltype"
default		"default"
delete		"delete"
do			"do"
double		"double"
dynamic_cast		"dynamic_cast"
else		"else"
enum		"enum"
explicit		"explicit"
export		"export"
extern		"extern"
false		"false"
float		"float"
for			"for"
friend		"friend"
final		"final"
goto		"goto"
if			"if"
inline		"inline"
int			"int"
long		"long"
mutable		"mutable"
namespace		"namespace"
new				"new"
noexcept		"noexcept"
nullptr			"nullptr"
operator		"operator"
override		"override"
private			"private"
protected		"protected"
public			"public"
register		"register"
reinterpret_cast		"reinterpret_cast"
return		"return"
short		"short"
signed		"signed"
sizeof		"sizeof"
static		"static"
static_assert		"static_assert"
static_cast			"static_cast"
struct				"struct"
switch				"switch"
template			"template"
this				"this"
thread_local		"thread_local"
throw			"throw"
true			"true"
try				"try"
typedef			"typedef"
typeid			"typeid"
typename		"typename"
union			"union"
unsigned		"unsigned"
using			"using"
virtual			"virtual"
void			"void"
volatile		"volatile"
wchar_t			"wchar_t"
while			"while"
{	"{"
}	"}"
[	"["
]	"]"
#	"#"
##	"##"
(	"("
)	")"
;	";"
:	":"
...	"..."
?	"?"
::	"::"
.	"."
.*	".*"
+	"+"
-	"-"
*	"*"
/	"/"
%	"%"
&	"&"
|	"|"
^	"^"
~	"~"
!	"!"
=	"="
<	"<"
>	">"
+=	"+="
-=	"-="
*=	"*="
/=	"/="
%=	"%="
&=	"&="
|=	"|="
^=	"^="
<<	"<<"
>>	">>"
>>=	">>="
<<=	"<<="
==	"=="
!=	"!="
<=	"<="
>=	">="
&&	"&&"
||	"||"
++	"++"
--	"--"
,	","
->	"->"
->*	"->*"
new[] "new[]"
delete[] "delete[]"
literal	"literal"
ID	"ID"
STR "string"
zero 	"0"
TMP	"temp"
