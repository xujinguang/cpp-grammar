void decl_specifier(int tab, leaf_t &leaf);
void decl_specifier_seq(int tab, leaf_t &leaf);
void storage_class_specifier(int tab, leaf_t &leaf);
void function_specifier(int tab, leaf_t &leaf);
void type_specifier(int tab, leaf_t &leaf);
void trailing_type_specifier(int tab, leaf_t &leaf);
void type_specifier_seq(int tab, leaf_t &leaf);
void trailing_type_specifier_seq(int tab, leaf_t &leaf);
void simple_type_specifier(int tab, leaf_t &leaf);
void type_name(int tab, leaf_t &leaf);
void decltype_specifier(int tab, leaf_t &leaf);
void elaborated_type_specifier(int tab, leaf_t &leaf);
void enum_specifier(int tab, leaf_t &leaf);
void enum_head(int tab, leaf_t &leaf);
void opaque_enum_declaration(int tab, leaf_t &leaf);
void enum_key(int tab, leaf_t &leaf);
void enum_base(int tab, leaf_t &leaf);
void enumerator_list(int tab, leaf_t &leaf);
void enumerator_definition(int tab, leaf_t &leaf);
void enumerator(int tab, leaf_t &leaf);
void nested_name_specifier(int tab, leaf_t &leaf);
void attribute_specifier_seq(int tab, leaf_t &leaf);
void class_key(int tab, leaf_t &leaf);
void class_name(int tab, leaf_t &leaf);
void class_specifier(int tab, leaf_t &leaf);
void constant_expression(int tab, leaf_t &leaf);
void cv_qualifier(int tab, leaf_t &leaf);
void enum_name(int tab, leaf_t &leaf);
void expression(int tab, leaf_t &leaf);
void namespace_name(int tab, leaf_t &leaf);
static void simple_template_id(int tab, leaf_t &leaf);
void typedef_name(int tab, leaf_t &leaf);
void typename_specifier(int tab, leaf_t &leaf);
void original_namespace_name(int tab, leaf_t &leaf);
void namespace_alias(int tab, leaf_t &leaf);
